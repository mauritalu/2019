@model Google.Models.Response

@{
    Layout = null;
}

@using Resources;

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="Content/bootstrap.min.css" rel="stylesheet" />
    <link href="Content/bootstrap-slider.css" rel="stylesheet" />
    <style type="text/css">
        .field-validation-error {
            color: #ff0000;
            display: block;
            font-size: 10px;
            text-align: center;
        }

        .input-validation-error {
            border: 1px solid #e80c4d !important;
        }
    </style>
    @*<script src="Scripts/jquery-1.9.1.js"></script>
    <script src="Scripts/bootstrap-slider.js"></script>*@
</head>
<body>

    @using (Html.BeginForm("Edit", "Google", FormMethod.Post))
    {
        @Html.AntiForgeryToken()


        if (ViewBag.ErrorList != null)
        {
            foreach (var errorMessage in ViewBag.ErrorList)
            {
                @errorMessage
            }

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        }



        <table border="0">
           @for (int i = 0; i < Model.CatData.Count; i++)
            {
                <tr>
                    <td>
                        @Html.HiddenFor(m => m.Success)
                        @Html.HiddenFor(m => m.SuccessMessage)
                    </td>
                    <td>&nbsp;</td>
            </tr>
                <tr>
                    <td>@Text.BankName</td>
                    <td>@Html.EditorFor(m => m.CatData[i].BankName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => m.CatData[i].BankName, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>@Text.Persnr</td>
                    <td>@Html.EditorFor(m => m.CatData[i].Persnr, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</td>
                </tr>
                <tr>
                    <td>@Text.kundnr</td>
                    <td>@Html.EditorFor(m => m.CatData[i].kundnr, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })</td>
                </tr>
                <tr>
                    <td>@Text.ExpectedAmount</td>
                    <td>@Html.EditorFor(m => m.CatData[i].ExpectedAmount, new { htmlAttributes = new { @class = "form-control" } })</td>
                    @*<td>@Html.EditorFor(m => m.CatData[i].ExpectedAmount, new { htmlAttributes = new { @class = "form-control", type = "range", step = ".1", min = "0", max = "20.0" } })</td>*@
                </tr>
                <tr>
                    <td colspan="2" align="right">
                        <input type="submit" value="Edit" />
                    </td>
                </tr>
            }
        </table>
    }


</body>
</html>

@section Scripts {
    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/bootstrap")
        @RenderSection("scripts", required: false)*@
        @*@Scripts.Render("~/bundles/jqueryval")*@
}

